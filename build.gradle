plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kr.mainstream.seolyuMq'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Mail Service
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = "${project.name}.jar"
}

build {
	jar.enabled = false
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
sourceSets {
	main {
		java {
			srcDirs "src/main/java"
			if (profile.equals('local')) {
				exclude "kr/mainstream/eventmessagelistener/infrastructure/file/production"
			} else {
				exclude "kr/mainstream/eventmessagelistener/infrastructure/file/development"
			}
		}
		resources {
			srcDirs "src/main/resources-${profile}"
		}
	}
}

bootRun {
	systemProperty "spring.profiles.active", profile
}

